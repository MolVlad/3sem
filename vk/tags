!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
AFTER_TRESHOLD_STRING_SIZE	includes/my_string.h	6;"	d
CFLAGS	Makefile	/^CFLAGS = -Wall -Wextra$/;"	m
CLEAR_HISTORY	includes/console.h	/^	CLEAR_HISTORY,$/;"	e	enum:ConsoleCommand
COMP	Makefile	/^COMP = gcc$/;"	m
ConsoleCommand	includes/console.h	/^enum ConsoleCommand$/;"	g
ConsoleState	includes/console.h	/^enum ConsoleState$/;"	g
DEFINES	Makefile	/^DEFINES =$/;"	m
DELETE_MSG	includes/console.h	/^	DELETE_MSG,$/;"	e	enum:ConsoleCommand
Data	includes/my_string.h	/^typedef char Data;$/;"	t
ERROR	includes/console.h	/^	ERROR,$/;"	e	enum:ConsoleCommand
EXIT	includes/console.h	/^	EXIT,$/;"	e	enum:ConsoleCommand
FALSE	includes/configure.h	/^	FALSE = 0,$/;"	e	enum:Flag
Flag	includes/configure.h	/^typedef enum Flag$/;"	g
Flag	includes/configure.h	/^} Flag;$/;"	t	typeref:enum:Flag
HASH_FUNCTION_INIT_VALUE	includes/htable.h	28;"	d
HASH_FUNCTION_PRIME_NUMBER	includes/htable.h	29;"	d
HTABLE_SIZE	includes/configure.h	9;"	d
HTABLE_STORAGE	includes/configure.h	10;"	d
HTableData	includes/htable.h	/^} HTableData;$/;"	t	typeref:struct:__anon1
HTableMap	includes/htable.h	/^} HTableMap;$/;"	t	typeref:struct:__anon2
HTableNode	includes/htable.h	/^typedef struct HTableNode$/;"	s
HTableNode	includes/htable.h	/^} HTableNode;$/;"	t	typeref:struct:HTableNode
HashType	includes/htable.h	/^typedef unsigned int HashType;$/;"	t
INIT	includes/console.h	/^	INIT,$/;"	e	enum:ConsoleCommand
INIT_STRING_SIZE	includes/my_string.h	4;"	d
LIBS	Makefile	/^LIBS =$/;"	m
MAIN_MENU	includes/console.h	/^	MAIN_MENU,$/;"	e	enum:ConsoleState
NO	includes/console.h	/^	NO,$/;"	e	enum:ConsoleCommand
OBJS	Makefile	/^OBJS = $(SOURCES:.c=.o)$/;"	m
OUTPUT_STREAM	includes/my_string.h	7;"	d
PRECOMP_OBJ	Makefile	/^PRECOMP_OBJ = $(PRECOMP:.h=.h.gch)$/;"	m
PROJECT	Makefile	/^PROJECT = exe$/;"	m
READ_DIALOGUE	includes/console.h	/^	READ_DIALOGUE,$/;"	e	enum:ConsoleCommand
RM	Makefile	/^RM = rm -rf$/;"	m
SEND_MSG	includes/console.h	/^	SEND_MSG,$/;"	e	enum:ConsoleCommand
SOURCES	Makefile	/^SOURCES = src\/main.c src\/my_string.c src\/console.c src\/print.c src\/menu.c src\/account.c src\/htable.c$/;"	m
String	includes/my_string.h	/^} String;$/;"	t	typeref:struct:__anon3
TRESHOLD_STRING_SIZE	includes/my_string.h	5;"	d
TRUE	includes/configure.h	/^	TRUE,$/;"	e	enum:Flag
USERS_LIST	includes/console.h	/^	USERS_LIST,$/;"	e	enum:ConsoleCommand
WELCOME_PAGE	includes/console.h	/^	WELCOME_PAGE = 0,$/;"	e	enum:ConsoleState
YES	includes/console.h	/^	YES,$/;"	e	enum:ConsoleCommand
__ACCOUNT_H__	includes/account.h	2;"	d
__CONFIGURE_H__	includes/configure.h	2;"	d
__CONSOLE_STATE_H__	includes/console.h	2;"	d
__HTABLE_H__	includes/htable.h	2;"	d
__MENU_H__	includes/menu.h	2;"	d
__MY_STRING_H__	includes/my_string.h	2;"	d
__PRECOMP_H__	includes/libs.h	2;"	d
__PRINT_H__	includes/print.h	2;"	d
areStringSame	src/my_string.c	/^Flag areStringSame(String * first, String * second)$/;"	f
array	includes/htable.h	/^	HTableNode ** array;$/;"	m	struct:__anon2
checkAccount	src/account.c	/^Flag checkAccount()$/;"	f
clearHistory	src/menu.c	/^void clearHistory()$/;"	f
clearString	src/my_string.c	/^void clearString(String * string)$/;"	f
consoleFiniteStateMachine	src/console.c	/^Flag consoleFiniteStateMachine(enum ConsoleCommand command)$/;"	f
convertToHTableData	src/htable.c	/^HTableData * convertToHTableData(String * login, String * password)$/;"	f
copyString	src/my_string.c	/^String * copyString(String * original)$/;"	f
copyStringElement	src/my_string.c	/^void copyStringElement(Data * destination, Data * element)$/;"	f
createAccount	src/account.c	/^Flag createAccount()$/;"	f
createHTable	src/htable.c	/^HTableMap * createHTable()$/;"	f
createHTableNode	src/htable.c	/^HTableNode * createHTableNode(HTableData * data)$/;"	f
createString	src/my_string.c	/^String * createString()$/;"	f
currentSize	includes/my_string.h	/^	int currentSize;$/;"	m	struct:__anon3
data	includes/htable.h	/^	HTableData * data;$/;"	m	struct:HTableNode
data	includes/my_string.h	/^	Data * data;$/;"	m	struct:__anon3
deleteHTable	src/htable.c	/^void deleteHTable(HTableMap * htableMap)$/;"	f
deleteHTableData	src/htable.c	/^void deleteHTableData(HTableData * data)$/;"	f
deleteHTableNode	src/htable.c	/^void deleteHTableNode(HTableNode * node)$/;"	f
deleteMessage	src/menu.c	/^void deleteMessage()$/;"	f
deleteString	src/my_string.c	/^void deleteString(String * string)$/;"	f
findHTableNodeInChein	src/htable.c	/^HTableData * findHTableNodeInChein(HTableNode * compared, String * login)$/;"	f
findInHTable	src/htable.c	/^HTableData * findInHTable(HTableMap * htableMap, String * login)$/;"	f
hashFunction	src/htable.c	/^HashType hashFunction(String * login)$/;"	f
htableMap	src/main.c	/^HTableMap * htableMap = NULL;$/;"	v
insertToHTable	src/htable.c	/^void insertToHTable(HTableMap * htableMap, HTableData * data)$/;"	f
login	includes/htable.h	/^	String * login;$/;"	m	struct:__anon1
main	src/main.c	/^int main()$/;"	f
maxSize	includes/my_string.h	/^	int maxSize;$/;"	m	struct:__anon3
nextInChain	includes/htable.h	/^	struct HTableNode * nextInChain;$/;"	m	struct:HTableNode	typeref:struct:HTableNode::HTableNode
parseCommand	src/console.c	/^enum ConsoleCommand parseCommand(String * string)$/;"	f
password	includes/htable.h	/^	String * password;$/;"	m	struct:__anon1
printConsoleCommand	src/console.c	/^void printConsoleCommand(enum ConsoleCommand command)$/;"	f
printConsoleState	src/console.c	/^void printConsoleState(enum ConsoleState state)$/;"	f
printError	src/print.c	/^void printError()$/;"	f
printGoodbye	src/print.c	/^void printGoodbye()$/;"	f
printGreeting	src/print.c	/^void printGreeting()$/;"	f
printHTable	src/htable.c	/^void printHTable(HTableMap * htableMap)$/;"	f
printHTableNode	src/htable.c	/^void printHTableNode(HTableNode * node)$/;"	f
printHTableNodeData	src/htable.c	/^void printHTableNodeData(HTableData * data)$/;"	f
printLogOut	src/print.c	/^void printLogOut()$/;"	f
printMainMenuCommandList	src/print.c	/^void printMainMenuCommandList()$/;"	f
printString	src/my_string.c	/^void printString(String * string)$/;"	f
printStringToFile	src/my_string.c	/^void printStringToFile(FILE * file, String * string)$/;"	f
putInHTable	src/htable.c	/^int putInHTable(HTableMap * htableMap, HashType hash, HTableNode * node)$/;"	f
putInString	src/my_string.c	/^void putInString(String * string, Data * data)$/;"	f
readDialogue	src/menu.c	/^void readDialogue()$/;"	f
readHTableFromFile	src/htable.c	/^void readHTableFromFile(HTableMap * htableMap, const char * fileName)$/;"	f
saveHTable	src/htable.c	/^void saveHTable(HTableMap * htableMap, const char * fileName)$/;"	f
saveHTableNode	src/htable.c	/^void saveHTableNode(FILE * file, HTableNode * node)$/;"	f
saveHTableNodeData	src/htable.c	/^void saveHTableNodeData(FILE * file, HTableData * data)$/;"	f
scanString	src/my_string.c	/^int scanString(String * string)$/;"	f
scanStringFromFile	src/my_string.c	/^Flag scanStringFromFile(FILE * file, String * string)$/;"	f
sendMessage	src/menu.c	/^void sendMessage()$/;"	f
size	includes/htable.h	/^	int size;$/;"	m	struct:__anon2
userList	src/menu.c	/^void userList()$/;"	f
