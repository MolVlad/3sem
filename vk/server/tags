!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ACK	libs/includes/general_config.h	/^	ACK = 0,$/;"	e	enum:ReverseMessageType
ACK	libs/includes/msg.h	/^		Flag ACK;$/;"	m	struct:MsgBufAnswer::DataForAnswer
AFTER_TRESHOLD_STRING_SIZE	libs/includes/my_string.h	6;"	d
BACKLOG	main_server/includes/user_communication.h	5;"	d
BTreeData	handler/includes/btree.h	/^} BTreeData;$/;"	t	typeref:struct:__anon6
BTreeMap	handler/includes/btree.h	/^} BTreeMap;$/;"	t	typeref:struct:__anon7
BTreeNode	handler/includes/btree.h	/^typedef struct BTreeNode$/;"	s
BTreeNode	handler/includes/btree.h	/^} BTreeNode;$/;"	t	typeref:struct:BTreeNode
CFLAGS	handler/Makefile	/^CFLAGS = -Wall -Wextra$/;"	m
CFLAGS	main_server/Makefile	/^CFLAGS = -Wall -Wextra$/;"	m
CHECK	libs/includes/general_config.h	56;"	d
COMP	handler/Makefile	/^COMP = gcc$/;"	m
COMP	main_server/Makefile	/^COMP = gcc$/;"	m
DEFINES	handler/Makefile	/^DEFINES =$/;"	m
DEFINES	main_server/Makefile	/^DEFINES =$/;"	m
Data	libs/includes/my_string.h	/^typedef char Data;$/;"	t
DataForAnswer	libs/includes/msg.h	/^	struct DataForAnswer$/;"	s	struct:MsgBufAnswer
DataForTransmission	libs/includes/msg.h	/^	struct DataForTransmission$/;"	s	struct:MsgBufTransmission
END	libs/includes/general_config.h	/^	END,$/;"	e	enum:MessageType
FALSE	libs/includes/general_config.h	/^	FALSE = 0,$/;"	e	enum:Flag
FILE_FOR_KEY	libs/includes/general_config.h	6;"	d
FILE_LIST	libs/includes/general_config.h	9;"	d
Flag	libs/includes/general_config.h	/^typedef enum Flag$/;"	g
Flag	libs/includes/general_config.h	/^} Flag;$/;"	t	typeref:enum:Flag
GENERAL_FIFO	libs/includes/general_config.h	7;"	d
HANDLER_DIR	Makefile	/^HANDLER_DIR = handler$/;"	m
HANDLER_NAME	Makefile	/^HANDLER_NAME = handler$/;"	m
HASH_FUNCTION_INIT_VALUE	handler/includes/htable.h	32;"	d
HASH_FUNCTION_PRIME_NUMBER	handler/includes/htable.h	33;"	d
HTABLE_SIZE	handler/includes/htable.h	4;"	d
HTABLE_STORAGE	handler/includes/htable.h	5;"	d
HTableData	handler/includes/htable.h	/^} HTableData;$/;"	t	typeref:struct:__anon4
HTableMap	handler/includes/htable.h	/^} HTableMap;$/;"	t	typeref:struct:__anon5
HTableNode	handler/includes/htable.h	/^typedef struct HTableNode$/;"	s
HTableNode	handler/includes/htable.h	/^} HTableNode;$/;"	t	typeref:struct:HTableNode
HashType	handler/includes/htable.h	/^typedef unsigned int HashType;$/;"	t
HeaderMessageStruct	libs/includes/general_config.h	/^} HeaderMessageStruct;$/;"	t	typeref:struct:__anon2
HeaderReverseMessageStruct	libs/includes/general_config.h	/^} HeaderReverseMessageStruct;$/;"	t	typeref:struct:__anon3
INIT	main_server/includes/state.h	/^	INIT = 0,$/;"	e	enum:ServerState
INIT_STRING_SIZE	libs/includes/my_string.h	4;"	d
LIBS	handler/Makefile	/^LIBS = -lpthread$/;"	m
LIBS	main_server/Makefile	/^LIBS = -lpthread$/;"	m
LIST	libs/includes/general_config.h	/^	LIST,$/;"	e	enum:ReverseMessageType
LIST_REQUEST	libs/includes/general_config.h	/^	LIST_REQUEST,$/;"	e	enum:MessageType
LOGIN	libs/includes/general_config.h	/^	LOGIN = 0,$/;"	e	enum:MessageType
MAIN_SERVER_DIR	Makefile	/^MAIN_SERVER_DIR = main_server$/;"	m
MAIN_SERVER_NAME	Makefile	/^MAIN_SERVER_NAME = main_server$/;"	m
MESSAGE	libs/includes/general_config.h	/^	MESSAGE,$/;"	e	enum:ReverseMessageType
MESSAGE_FOR_SERVER	libs/includes/msg.h	6;"	d
MSG	libs/includes/general_config.h	/^	MSG,$/;"	e	enum:MessageType
MSG_SIZE	libs/includes/msg.h	4;"	d
MessageType	libs/includes/general_config.h	/^enum MessageType$/;"	g
MsgBufAnswer	libs/includes/msg.h	/^struct MsgBufAnswer$/;"	s
MsgBufTransmission	libs/includes/msg.h	/^struct MsgBufTransmission$/;"	s
NACK	libs/includes/general_config.h	/^	NACK,$/;"	e	enum:ReverseMessageType
NAME_SIZE	libs/includes/msg.h	5;"	d
NUM_OF_SEM	libs/includes/sem.h	4;"	d
NUM_SPACE_TO_BREAK	libs/includes/my_string.h	7;"	d
OBJS	handler/Makefile	/^OBJS = $(SOURCES:.c=.o)$/;"	m
OBJS	main_server/Makefile	/^OBJS = $(SOURCES:.c=.o)$/;"	m
PERMISSION	libs/includes/general_config.h	11;"	d
PORT	libs/includes/general_config.h	4;"	d
PRECOMP_OBJ	handler/Makefile	/^PRECOMP_OBJ = $(PRECOMP:.h=.h.gch)$/;"	m
PRECOMP_OBJ	main_server/Makefile	/^PRECOMP_OBJ = $(PRECOMP:.h=.h.gch)$/;"	m
PRIVATE_FIFO_NAME_SIZE	libs/includes/general_config.h	8;"	d
PROJECT	handler/Makefile	/^PROJECT = handler$/;"	m
PROJECT	main_server/Makefile	/^PROJECT = main_server$/;"	m
RCV	libs/includes/general_config.h	/^	RCV,$/;"	e	enum:MessageType
REG	libs/includes/general_config.h	/^	REG,$/;"	e	enum:MessageType
RM	handler/Makefile	/^RM = rm -rf$/;"	m
RM	main_server/Makefile	/^RM = rm -rf$/;"	m
ReverseMessageType	libs/includes/general_config.h	/^enum ReverseMessageType$/;"	g
SOURCES	handler/Makefile	/^SOURCES = src\/main.c src\/htable.c src\/btree.c ..\/libs\/src\/my_string.c ..\/libs\/src\/sem.c ..\/libs\/src\/fifo.c ..\/libs\/src\/msg.c$/;"	m
SOURCES	main_server/Makefile	/^SOURCES = src\/main.c ..\/libs\/src\/my_string.c src\/user_communication.c src\/handler_communication.c src\/zombie.c src\/state.c ..\/libs\/src\/fifo.c ..\/libs\/src\/msg.c ..\/libs\/src\/sem.c$/;"	m
STDIN	libs/includes/general_config.h	53;"	d
STDOUT	libs/includes/general_config.h	54;"	d
SemName	libs/includes/sem.h	/^enum SemName$/;"	g
ServerState	main_server/includes/state.h	/^enum ServerState$/;"	g
String	libs/includes/my_string.h	/^} String;$/;"	t	typeref:struct:__anon1
TRESHOLD_STRING_SIZE	libs/includes/my_string.h	5;"	d
TRUE	libs/includes/general_config.h	/^	TRUE,$/;"	e	enum:Flag
WAITING_REQUESTS	main_server/includes/state.h	/^	WAITING_REQUESTS,$/;"	e	enum:ServerState
__BTREE_H__	handler/includes/btree.h	2;"	d
__FIFO_H__	libs/includes/fifo.h	2;"	d
__GENERAL_CONFIG_H__	libs/includes/general_config.h	2;"	d
__GLOBAL_H__	handler/includes/global.h	2;"	d
__GLOBAL_H__	main_server/includes/global.h	2;"	d
__HANDLER_COMMUNICATION_H__	main_server/includes/handler_communication.h	2;"	d
__HTABLE_H__	handler/includes/htable.h	2;"	d
__MSG_H__	libs/includes/msg.h	2;"	d
__MY_STRING_H__	libs/includes/my_string.h	2;"	d
__PRECOMP_H__	libs/includes/libs.h	2;"	d
__SEM_H__	libs/includes/sem.h	2;"	d
__STATE_H__	main_server/includes/state.h	2;"	d
__USER_COMMUNICATION_H__	main_server/includes/user_communication.h	2;"	d
__ZOMBIE_H__	main_server/includes/zombie.h	2;"	d
array	handler/includes/htable.h	/^	HTableNode ** array;$/;"	m	struct:__anon5
btreeMap	handler/src/main.c	/^BTreeMap * btreeMap;$/;"	v
checkAccount	main_server/src/handler_communication.c	/^Flag checkAccount(String * login, String * password)$/;"	f
clearString	libs/src/my_string.c	/^void clearString(String * string)$/;"	f
connectToMsg	libs/src/msg.c	/^int connectToMsg(key_t key)$/;"	f
connectToSem	libs/src/sem.c	/^int connectToSem(key_t key, int num)$/;"	f
convertToBTreeData	handler/src/btree.c	/^BTreeData * convertToBTreeData(String * login, int pid)$/;"	f
convertToHTableData	handler/src/htable.c	/^HTableData * convertToHTableData(String * login, String * password)$/;"	f
copyString	libs/src/my_string.c	/^String * copyString(String * original)$/;"	f
createAccount	main_server/src/handler_communication.c	/^Flag createAccount(String * login, String * password)$/;"	f
createBTree	handler/src/btree.c	/^BTreeMap * createBTree()$/;"	f
createBTreeNode	handler/src/btree.c	/^BTreeNode * createBTreeNode(BTreeData * data)$/;"	f
createFIFO	libs/src/fifo.c	/^int createFIFO(const char * name)$/;"	f
createHTable	handler/src/htable.c	/^HTableMap * createHTable()$/;"	f
createHTableNode	handler/src/htable.c	/^HTableNode * createHTableNode(HTableData * data)$/;"	f
createMsg	libs/src/msg.c	/^int createMsg(key_t key)$/;"	f
createSem	libs/src/sem.c	/^int createSem(key_t key, int num)$/;"	f
createString	libs/src/my_string.c	/^String * createString()$/;"	f
createThreadToFightZombie	main_server/src/zombie.c	/^int createThreadToFightZombie()$/;"	f
currentSize	libs/includes/my_string.h	/^	int currentSize;$/;"	m	struct:__anon1
data	handler/includes/btree.h	/^	BTreeData * data;$/;"	m	struct:BTreeNode
data	handler/includes/htable.h	/^	HTableData * data;$/;"	m	struct:HTableNode
data	libs/includes/msg.h	/^	} data;$/;"	m	struct:MsgBufAnswer	typeref:struct:MsgBufAnswer::DataForAnswer
data	libs/includes/msg.h	/^	} data;$/;"	m	struct:MsgBufTransmission	typeref:struct:MsgBufTransmission::DataForTransmission
data	libs/includes/my_string.h	/^	Data * data;$/;"	m	struct:__anon1
dataSize	libs/includes/general_config.h	/^	int dataSize;$/;"	m	struct:__anon2
dataSize	libs/includes/general_config.h	/^	int dataSize;$/;"	m	struct:__anon3
deleteBTree	handler/src/btree.c	/^void deleteBTree(BTreeMap * btreeMap)$/;"	f
deleteBTreeData	handler/src/btree.c	/^void deleteBTreeData(BTreeData * data)$/;"	f
deleteBTreeNode	handler/src/btree.c	/^void deleteBTreeNode(BTreeNode * node)$/;"	f
deleteFromBTree	handler/src/btree.c	/^void deleteFromBTree(BTreeMap * btreeMap, String * target)$/;"	f
deleteFromBTreeNode	handler/src/btree.c	/^BTreeNode * deleteFromBTreeNode(BTreeNode * node, String * target)$/;"	f
deleteHTable	handler/src/htable.c	/^void deleteHTable(HTableMap * htableMap)$/;"	f
deleteHTableData	handler/src/htable.c	/^void deleteHTableData(HTableData * data)$/;"	f
deleteHTableNode	handler/src/htable.c	/^void deleteHTableNode(HTableNode * node)$/;"	f
deleteString	libs/src/my_string.c	/^void deleteString(String * string)$/;"	f
findBTreeNode	handler/src/btree.c	/^BTreeData * findBTreeNode(BTreeNode * compared, String * login)$/;"	f
findHTableNodeInChein	handler/src/htable.c	/^HTableData * findHTableNodeInChein(HTableNode * compared, String * login)$/;"	f
findInBTree	handler/src/btree.c	/^BTreeData * findInBTree(BTreeMap * btreeMap, String * login)$/;"	f
findInHTable	handler/src/htable.c	/^HTableData * findInHTable(HTableMap * htableMap, String * login)$/;"	f
functionToFightZombies	main_server/src/zombie.c	/^void *functionToFightZombies()$/;"	f
generalFifo	handler/src/main.c	/^int generalFifo;$/;"	v
generalFifo	main_server/src/main.c	/^int generalFifo;$/;"	v
generalFifoSynch	libs/includes/sem.h	/^	generalFifoSynch = 0,$/;"	e	enum:SemName
getAnswer	main_server/src/handler_communication.c	/^Flag getAnswer()$/;"	f
getPrivateFifoToRead	main_server/src/handler_communication.c	/^Flag getPrivateFifoToRead()$/;"	f
getPrivateFifoToWrite	main_server/src/handler_communication.c	/^Flag getPrivateFifoToWrite()$/;"	f
getTheKey	libs/src/sem.c	/^key_t getTheKey(const char * keyFileName, int id)$/;"	f
handleRequest	handler/src/main.c	/^void handleRequest(enum MessageType type)$/;"	f
handlerPid	main_server/src/main.c	/^int handlerPid;$/;"	v
hashFunction	handler/src/htable.c	/^HashType hashFunction(String * login)$/;"	f
htableMap	handler/src/main.c	/^HTableMap * htableMap;$/;"	v
increasePrivateFifoName	handler/src/main.c	/^void increasePrivateFifoName(char * privateFifoName)$/;"	f
insertToBTree	handler/src/btree.c	/^void insertToBTree(BTreeMap * btreeMap, BTreeData * data)$/;"	f
insertToHTable	handler/src/htable.c	/^void insertToHTable(HTableMap * htableMap, HTableData * data)$/;"	f
left	handler/includes/btree.h	/^	struct BTreeNode * left;$/;"	m	struct:BTreeNode	typeref:struct:BTreeNode::BTreeNode
login	handler/includes/btree.h	/^	String * login;$/;"	m	struct:__anon6
login	handler/includes/htable.h	/^	String * login;$/;"	m	struct:__anon4
loginSize	libs/includes/general_config.h	/^	int loginSize;$/;"	m	struct:__anon2
main	handler/src/main.c	/^int main()$/;"	f
main	main_server/src/main.c	/^int main()$/;"	f
maxSize	libs/includes/my_string.h	/^	int maxSize;$/;"	m	struct:__anon1
msgidForAnswer	handler/src/main.c	/^int msgidForAnswer;$/;"	v
msgidForAnswer	main_server/src/main.c	/^int msgidForAnswer;$/;"	v
msgidForTransmission	handler/src/main.c	/^int msgidForTransmission;$/;"	v
msgidForTransmission	main_server/src/main.c	/^int msgidForTransmission;$/;"	v
nextInChain	handler/includes/htable.h	/^	struct HTableNode * nextInChain;$/;"	m	struct:HTableNode	typeref:struct:HTableNode::HTableNode
openFIFO	libs/src/fifo.c	/^int openFIFO(const char * name)$/;"	f
parseType	handler/src/main.c	/^int parseType(String * string)$/;"	f
password	handler/includes/htable.h	/^	String * password;$/;"	m	struct:__anon4
passwordSize	libs/includes/general_config.h	/^	int passwordSize;$/;"	m	struct:__anon2
pid	handler/includes/btree.h	/^	int pid;$/;"	m	struct:__anon6
pidToString	libs/src/my_string.c	/^String * pidToString()$/;"	f
printBTree	handler/src/btree.c	/^void printBTree(BTreeMap * btreeMap)$/;"	f
printBTreeData	handler/src/btree.c	/^void printBTreeData(BTreeData * data)$/;"	f
printBTreeNode	handler/src/btree.c	/^void printBTreeNode(BTreeNode * node)$/;"	f
printHTable	handler/src/htable.c	/^void printHTable(HTableMap * htableMap)$/;"	f
printHTableNode	handler/src/htable.c	/^void printHTableNode(HTableNode * node)$/;"	f
printHTableNodeData	handler/src/htable.c	/^void printHTableNodeData(HTableData * data)$/;"	f
printStringToStream	libs/src/my_string.c	/^int printStringToStream(int stream, String * string)$/;"	f
privateFifo	handler/src/main.c	/^int privateFifo;$/;"	v
privateFifo	libs/includes/msg.h	/^		char privateFifo[PRIVATE_FIFO_NAME_SIZE];$/;"	m	struct:MsgBufAnswer::DataForAnswer
privateFifo	libs/includes/msg.h	/^		char privateFifo[PRIVATE_FIFO_NAME_SIZE];$/;"	m	struct:MsgBufTransmission::DataForTransmission
privateFifoName	handler/src/main.c	/^char privateFifoName[PRIVATE_FIFO_NAME_SIZE];$/;"	v
privateFifoName	main_server/src/main.c	/^char privateFifoName[PRIVATE_FIFO_NAME_SIZE];$/;"	v
putInBTree	handler/src/btree.c	/^int putInBTree(BTreeMap * btreeMap, BTreeNode * node)$/;"	f
putInHTable	handler/src/htable.c	/^int putInHTable(HTableMap * htableMap, HashType hash, HTableNode * node)$/;"	f
putInString	libs/src/my_string.c	/^void putInString(String * string, Data * data)$/;"	f
raiseServer	main_server/src/user_communication.c	/^int raiseServer()$/;"	f
readHTableFromFile	handler/src/htable.c	/^void readHTableFromFile(HTableMap * htableMap, const char * fileName)$/;"	f
replyViaNet	main_server/src/user_communication.c	/^void replyViaNet(enum ReverseMessageType type, int newsockfd)$/;"	f
replyWithMSG	handler/src/main.c	/^void replyWithMSG(int pid, Flag isOK)$/;"	f
right	handler/includes/btree.h	/^	struct BTreeNode * right;$/;"	m	struct:BTreeNode	typeref:struct:BTreeNode::BTreeNode
root	handler/includes/btree.h	/^	BTreeNode * root;$/;"	m	struct:__anon7
saveBTree	handler/src/btree.c	/^void saveBTree(BTreeMap * btreeMap, const char * fileName)$/;"	f
saveBTreeData	handler/src/btree.c	/^void saveBTreeData(BTreeData * data, int fd)$/;"	f
saveBTreeNode	handler/src/btree.c	/^void saveBTreeNode(BTreeNode * node, int fd)$/;"	f
saveHTable	handler/src/htable.c	/^void saveHTable(HTableMap * htableMap, const char * fileName)$/;"	f
saveHTableNode	handler/src/htable.c	/^void saveHTableNode(int fd, HTableNode * node)$/;"	f
saveHTableNodeData	handler/src/htable.c	/^void saveHTableNodeData(int fd, HTableData * data)$/;"	f
scanHeader	main_server/src/user_communication.c	/^int scanHeader(HeaderMessageStruct * header, int newsockfd)$/;"	f
scanPid	handler/src/main.c	/^int scanPid()$/;"	f
scanStringFromStream	libs/src/my_string.c	/^int scanStringFromStream(int fd, String * string, int maxNum)$/;"	f
scanTextFromStream	libs/src/my_string.c	/^int scanTextFromStream(int fd, String * string, int maxNum)$/;"	f
semOperation	libs/src/sem.c	/^void semOperation(int semid, enum SemName semName, int operation)$/;"	f
semid	handler/src/main.c	/^int semid;$/;"	v
semid	main_server/src/main.c	/^int semid;$/;"	v
sendList	main_server/src/user_communication.c	/^void sendList(int newsockfd)$/;"	f
sendMessage	main_server/src/user_communication.c	/^void sendMessage(int newsockfd)$/;"	f
sendReply	main_server/src/user_communication.c	/^int sendReply(Flag flag, int newsockfd)$/;"	f
sendToPipe	main_server/src/handler_communication.c	/^void sendToPipe(enum MessageType type, String * login, String * password)$/;"	f
sendToRecipient	main_server/src/handler_communication.c	/^Flag sendToRecipient(String * recipient, String * data)$/;"	f
sendToRecipientPrivateFifoName	handler/src/main.c	/^void sendToRecipientPrivateFifoName(int pid)$/;"	f
sendToSenderPrivateFifoName	handler/src/main.c	/^void sendToSenderPrivateFifoName(int pid, Flag isOK)$/;"	f
serverFiniteStateMachine	main_server/src/state.c	/^Flag serverFiniteStateMachine(HeaderMessageStruct * header, int newsockfd)$/;"	f
serverThreadSynch	libs/includes/sem.h	/^	serverThreadSynch,$/;"	e	enum:SemName
sigHandler	handler/src/main.c	/^void sigHandler(int nsig)$/;"	f
sigHandler	main_server/src/main.c	/^void sigHandler(int nsig)$/;"	f
size	handler/includes/htable.h	/^	int size;$/;"	m	struct:__anon5
sockfd	main_server/src/main.c	/^int sockfd;$/;"	v
stringCompare	libs/src/my_string.c	/^int stringCompare(String * first, String * second)$/;"	f
stringForGeneralFifo	handler/src/main.c	/^String * stringForGeneralFifo;$/;"	v
stringPid	main_server/src/main.c	/^String * stringPid;$/;"	v
thid	main_server/src/main.c	/^pthread_t thid = 0;$/;"	v
threadSidHandler	main_server/src/main.c	/^void threadSidHandler()$/;"	f
type	libs/includes/general_config.h	/^	enum MessageType type;$/;"	m	struct:__anon2	typeref:enum:__anon2::MessageType
type	libs/includes/general_config.h	/^	enum ReverseMessageType type;$/;"	m	struct:__anon3	typeref:enum:__anon3::ReverseMessageType
type	libs/includes/msg.h	/^	long type;$/;"	m	struct:MsgBufAnswer
type	libs/includes/msg.h	/^	long type;$/;"	m	struct:MsgBufTransmission
userListSynch	libs/includes/sem.h	/^	userListSynch,$/;"	e	enum:SemName
userLogin	main_server/src/main.c	/^String * userLogin;$/;"	v
