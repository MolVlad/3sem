!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
CFLAGS	Makefile	/^CFLAGS = -Wall -Wextra$/;"	m
COMP	Makefile	/^COMP = gcc$/;"	m
DEFINES	Makefile	/^DEFINES = #-DCONSOLE$/;"	m
MAX_NUM_WORDS	includes/split.h	28;"	d
MAX_SIZE_DELIMITERS	includes/split.h	27;"	d
MAX_SIZE_TEXT	includes/split.h	26;"	d
MAX_SIZE_WORD	includes/split.h	29;"	d
OBJS	Makefile	/^OBJS = $(SOURCES:.c=.o)$/;"	m
PROJECT	Makefile	/^PROJECT = homework2$/;"	m
RM	Makefile	/^RM = rm -f$/;"	m
SOURCES	Makefile	/^SOURCES = src\/main.c src\/split.c$/;"	m
__MAIN_H__	includes/main.h	2;"	d
__SPLIT_H__	includes/split.h	15;"	d
allocateMemory	src/split.c	/^char * allocateMemory(int numSymbols)$/;"	f
allocateMemoryArray	src/split.c	/^char ** allocateMemoryArray(int arraySize, int wordSize)$/;"	f
count	includes/split.h	/^	int count;$/;"	m	struct:__anon1
delimiters	includes/split.h	/^	char * delimiters;$/;"	m	struct:__anon1
freeMemoryArray	src/split.c	/^void freeMemoryArray(char ** array, int arraySize)$/;"	f
main	fork.c	/^int main(int argc, char * argv[], char *envp[])$/;"	f
main	hello.c	/^int main()$/;"	f
main	lol.c	/^int main()$/;"	f
main	src/main.c	/^int main()$/;"	f
maxNumWords	includes/split.h	/^	int maxNumWords;$/;"	m	struct:__anon1
maxSizeDelimiters	includes/split.h	/^	int maxSizeDelimiters;$/;"	m	struct:__anon1
maxSizeText	includes/split.h	/^	int maxSizeText;$/;"	m	struct:__anon1
maxSizeWord	includes/split.h	/^	int maxSizeWord;$/;"	m	struct:__anon1
splitFree	src/split.c	/^int splitFree(splitStruct * split)$/;"	f
splitInit	src/split.c	/^int splitInit(splitStruct * split)$/;"	f
splitPrint	src/split.c	/^int splitPrint(splitStruct * split)$/;"	f
splitScan	src/split.c	/^int splitScan(splitStruct * split)$/;"	f
splitSplit	src/split.c	/^int splitSplit(splitStruct * split)$/;"	f
splitStruct	includes/split.h	/^} splitStruct;$/;"	t	typeref:struct:__anon1
text	includes/split.h	/^	char * text;$/;"	m	struct:__anon1
words	includes/split.h	/^	char ** words;$/;"	m	struct:__anon1
